<?php
    function buy_menu() {
        $items = array();

        $items['buy/tovar/%'] = array(
            'page callback' => 'buy_tovar',
            'type' => MENU_CALLBACK,
            'access arguments' => array('access content'),
            'page arguments' => array(2)
        );

        $items['admin/config/content/buy_logs'] = array(

            'title' => 'Управление покупками',
            'page callback' => 'buy_logs',
            'access arguments' => array('access administration pages')
        );

        $items['admin/config/content/buy_access/delete/%'] = array(
            'page callback' => 'buy_access_admin_delete',
            'access arguments' => array('access administration pages'),
            'type' => MENU_CALLBACK,
            'page arguments' => array(5)
        );

        return $items;
    }

    function buy_theme($existing, $type, $theme, $path){
        return array(
            'purchase_button_anonymous' => array(
                'template' => 'templates/purchase_button_anonymous',
            ),
            'purchase_button_authenticated' => array(
                'template' => 'templates/purchase_button_authenticated',
            ),
            'purchase_button_sended' => array(
                'template' => 'templates/purchase_button_sended',
            )
            
        );
    }

    function buy_tovar($nid){
        if (!preg_match('/^[0-9]+$/', $nid)) {
            drupal_not_found();
            drupal_exit();
        }
        $node = node_load($nid);
        if (!$node) {
            drupal_not_found();
            drupal_exit();
        }
        if ($node->field_tovar_status['und'][0]['value'] != 'tovar_status1') {
            drupal_not_found();
            drupal_exit();
        }
        global $user;
        $participant = (int) db_select('purchases', 'a')
            ->condition('uid', $user->uid)
            ->condition('nid', $node->nid)
            ->countQuery()
            ->execute()
            ->fetchField();
        if ($participant > 0) {
            drupal_not_found();
            drupal_exit();
        }
        db_insert('purchases')
            ->fields(array('uid' => $user->uid, 'nid' => $node->nid))
            ->execute();

            $node->field_tovar_status['und'][0]['value'] = 'tovar_status2';
            node_save($node);
        
        drupal_set_message('Ваша заявка принята на расмотрение.', 'status');
        drupal_goto(drupal_get_path_alias('node/'.$node->nid));
    }

    function buy_logs(){
        $result = db_select('purchases', 'p')
            ->fields('p')
            ->orderBy('p.id')
            ->execute();
        $rows[] = array();

        
        foreach ($result as $row) {
            $node = node_load($row->nid);
            if (!$node)
                continue;

            $user = user_load($row->uid);

            $rows[] = array(
                l($node->title, drupal_get_path_alias('node/'.$node->nid), array('attributes' => array('target' => '_blank'))),
                l($user->name, drupal_get_path_alias('user/'.$row->uid), array('attributes' => array('target' => '_blank'))),
                l('Удалить', 'admin/config/content/buy_access/delete/'.$row->id, array('attributes' => array('class' => 'delete_request'))),
            );
        }
        return theme('table', array('header' => array('Наименование', 'Имя пользователя','Удалить'), 'rows' => $rows));

    }

    function buy_access_admin_delete($id) {
        if (!preg_match('/^[0-9]+$/', $id)) {
            drupal_not_found();
            drupal_exit();
        }
        db_delete('purchases')
            ->condition('id', $id)
            ->execute();
        drupal_set_message('Покупка удалена.', 'status');
        drupal_goto('admin/config/content/buy_logs');
    }
    
    function buy_node_view($node, $view_mode, $langcode) {  
        if ($node->type != 'tovar')
            return true;
        global $user;
        

        switch ($node->field_tovar_status['und'][0]['value']) {
                case 'tovar_status1':
                    
                    if (!in_array('authenticated user', $user->roles)) {
                        $node->content['purchase_button'] = array(
                            '#markup' => theme('purchase_button_anonymous', array('nid' => $node->nid)),
                            '#weight' => -1
                            );
                        return true;
                    };
                    
                    $node->content['purchase_button'] = array(
                        '#markup' => theme('purchase_button_authenticated', array('nid' => $node->nid)),
                        '#weight' => -1
                    );
                break;
    
        }
        
        return true;
    }